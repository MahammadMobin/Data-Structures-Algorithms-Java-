
package linklost;

public class Linklost {
    public static class Node{
        int val;
        Node next;
        Node prev;
        Node ( int val ){
            this.val = val;
        }        
    }
    
    public static void display ( Node head ){
        
        Node temp = head;
        while ( temp!= null ){
            System.out.print ( temp.val+" ");
            temp = temp.next;
        }
    }
    
    public static void displayreverse( Node tail){ // reverse linklist
        Node temp = tail;
        while ( temp!= null ){
            System.out.print(temp.val+ " ");
            temp = temp.prev;
        }
        System.out.println( );
        
    }
    
   public static Node insertAtHead (Node head, int x){ // insertion at head in dubly linklist
       Node t = new Node ( 500);
       t.next = head;
       head.prev = t;
       head = t;
       return head;
   }
   public static void insertAtIdx (Node head, int idx, int x){ 
       Node s = head;
       for ( int i = 1;i<=idx - 1; i++){
           s = s.next;
       }
       Node r =s.next;
       Node t = new Node (x);
       s.next = t;
       t.prev = s;
       t.next = r;
       r.prev = t;
   }
     
   public static void insertAtTail ( Node head, int x){
       Node temp = head;
       while( temp.next!=null ){
           temp = temp.next;
           
       }
       Node t = new Node (x);
       temp.next = t;
       t.prev = temp;
       
   }
   public static void main (String [] args){
        Node a  = new Node ( 4 );
        Node b = new Node ( 5);
        Node c = new Node ( 10);
        Node d  = new Node ( 155);
       
        a.next = b;
        b.prev = a;
        b.next = c;
        c.prev = b;
        c.next = d;
        d.prev = c;
      ////  display  ( a );
       // insertAtTail(a,90);
        display (a);
        insertAtIdx (a,3,56);
        display (a);
      //  displayreverse(d); // reverse linkliist
       
    //   display(a);
     //  Node newHead = insertAtHead (a,35);
    //   display ( newHead);
       
    }
}    
